<?php

namespace Pondol\Fortune\Services;

/**
 * 12신살을 전문적으로 계산하는 클래스입니다.
 * 연지(年支)의 삼합(三合)을 기준으로 각 지지에 해당하는 12신살을 판별하여
 * 한글과 한자를 포함한 객체 형태로 반환합니다.
 */
class Sinsal12
{
    /**
     * 12신살의 모든 정적 정보(한글, 한자)를 중앙에서 관리합니다.
     */
    private const SINSAL_DEFINITIONS = [
        '겁살'   => ['ch' => '劫殺'],
        '재살'   => ['ch' => '災殺'],
        '천살'   => ['ch' => '天殺'],
        '지살'   => ['ch' => '地殺'],
        '도화살' => ['ch' => '桃花殺'],
        '월살'   => ['ch' => '月殺'],
        '망신살' => ['ch' => '亡身殺'],
        '장성살' => ['ch' => '將星殺'],
        '반안살' => ['ch' => '攀鞍殺'],
        '역마살' => ['ch' => '驛馬殺'],
        '육해살' => ['ch' => '六害殺'],
        '화개살' => ['ch' => '華蓋殺'],
    ];

    /**
     * 삼합 그룹별 12신살의 순서와 이름을 정의한 '지도'입니다.
     */
    private const SINSAL_MAP = [
        // 신자진(申子辰) 水局 그룹
        '申' => ['겁살' => '巳', '재살' => '午', '천살' => '未', '지살' => '申', '도화살' => '酉', '월살' => '戌', '망신살' => '亥', '장성살' => '子', '반안살' => '丑', '역마살' => '寅', '육해살' => '卯', '화개살' => '辰'],
        '子' => ['겁살' => '巳', '재살' => '午', '천살' => '未', '지살' => '申', '도화살' => '酉', '월살' => '戌', '망신살' => '亥', '장성살' => '子', '반안살' => '丑', '역마살' => '寅', '육해살' => '卯', '화개살' => '辰'],
        '辰' => ['겁살' => '巳', '재살' => '午', '천살' => '未', '지살' => '申', '도화살' => '酉', '월살' => '戌', '망신살' => '亥', '장성살' => '子', '반안살' => '丑', '역마살' => '寅', '육해살' => '卯', '화개살' => '辰'],

        // 인오술(寅午戌) 火局 그룹
        '寅' => ['겁살' => '亥', '재살' => '子', '천살' => '丑', '지살' => '寅', '도화살' => '卯', '월살' => '辰', '망신살' => '巳', '장성살' => '午', '반안살' => '未', '역마살' => '申', '육해살' => '酉', '화개살' => '戌'],
        '午' => ['겁살' => '亥', '재살' => '子', '천살' => '丑', '지살' => '寅', '도화살' => '卯', '월살' => '辰', '망신살' => '巳', '장성살' => '午', '반안살' => '未', '역마살' => '申', '육해살' => '酉', '화개살' => '戌'],
        '戌' => ['겁살' => '亥', '재살' => '子', '천살' => '丑', '지살' => '寅', '도화살' => '卯', '월살' => '辰', '망신살' => '巳', '장성살' => '午', '반안살' => '未', '역마살' => '申', '육해살' => '酉', '화개살' => '戌'],

        // 사유축(巳酉丑) 金局 그룹 (기존 코드에 '도화'로 되어 있던 것을 '도화살'로 통일)
        '巳' => ['겁살' => '寅', '재살' => '卯', '천살' => '辰', '지살' => '巳', '도화살' => '午', '월살' => '未', '망신살' => '申', '장성살' => '酉', '반안살' => '戌', '역마살' => '亥', '육해살' => '子', '화개살' => '丑'],
        '酉' => ['겁살' => '寅', '재살' => '卯', '천살' => '辰', '지살' => '巳', '도화살' => '午', '월살' => '未', '망신살' => '申', '장성살' => '酉', '반안살' => '戌', '역마살' => '亥', '육해살' => '子', '화개살' => '丑'],
        '丑' => ['겁살' => '寅', '재살' => '卯', '천살' => '辰', '지살' => '巳', '도화살' => '午', '월살' => '未', '망신살' => '申', '장성살' => '酉', '반안살' => '戌', '역마살' => '亥', '육해살' => '子', '화개살' => '丑'],

        // 해묘미(亥卯未) 木局 그룹 (기존 코드에 '도화'로 되어 있던 것을 '도화살'로 통일)
        '亥' => ['겁살' => '申', '재살' => '酉', '천살' => '戌', '지살' => '亥', '도화살' => '子', '월살' => '丑', '망신살' => '寅', '장성살' => '卯', '반안살' => '辰', '역마살' => '巳', '육해살' => '午', '화개살' => '未'],
        '卯' => ['겁살' => '申', '재살' => '酉', '천살' => '戌', '지살' => '亥', '도화살' => '子', '월살' => '丑', '망신살' => '寅', '장성살' => '卯', '반안살' => '辰', '역마살' => '巳', '육해살' => '午', '화개살' => '未'],
        '未' => ['겁살' => '申', '재살' => '酉', '천살' => '戌', '지살' => '亥', '도화살' => '子', '월살' => '丑', '망신살' => '寅', '장성살' => '卯', '반안살' => '辰', '역마살' => '巳', '육해살' => '午', '화개살' => '未'],
    ];

    private string $yeonji;

    // [수정] 결과값이 이제 string이 아닌 object 또는 null이 됩니다.
    public ?object $year = null;
    public ?object $month = null;
    public ?object $day = null;
    public ?object $hour = null;

    public function withSaju($saju): self
    {
        $this->yeonji = $saju->get_e('year');

        $this->year = $this->calculate($saju->get_e('year'));
        $this->month = $this->calculate($saju->get_e('month'));
        $this->day = $this->calculate($saju->get_e('day'));
        $this->hour = $this->calculate($saju->get_e('hour'));

        return $this;
    }

    /**
     * [수정] 핵심 엔진이 이제 string 대신 object 또는 null을 반환합니다.
     */
    private function calculate(string $jiji): ?object
    {
        if (!isset(self::SINSAL_MAP[$this->yeonji])) {
            return null;
        }

        $sinsalGroupMap = self::SINSAL_MAP[$this->yeonji];
        $sinsalName = array_search($jiji, $sinsalGroupMap);

        // 일치하는 신살이 있을 경우, DEFINITIONS를 참조하여 객체를 생성합니다.
        if ($sinsalName && isset(self::SINSAL_DEFINITIONS[$sinsalName])) {
            return (object)[
                'ko' => $sinsalName,
                'ch' => self::SINSAL_DEFINITIONS[$sinsalName]['ch']
            ];
        }

        return null;
    }
}
